(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[94],{

/***/ 731:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm-browser.js
var vue_esm_browser = __webpack_require__(0);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/zh-CN/base.md?vue&type=template&id=92111fd6

const _hoisted_1 = {
  class: "content element-doc"
};

const _hoisted_2 = /*#__PURE__*/Object(vue_esm_browser["createStaticVNode"])("<h2 id=\"ji-chu\"><a class=\"header-anchor\" href=\"#ji-chu\">¶</a> 基础</h2><h3 id=\"quan-ju-zu-jian-shi-jian\"><a class=\"header-anchor\" href=\"#quan-ju-zu-jian-shi-jian\">¶</a> 全局组件事件</h3><div class=\"tip\"><p>提示： vue-cesium 所有组件都包含下列 3 个事件，后续文档可能不再列出。</p></div><table><thead><tr><th>事件名</th><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>beforeLoad</td><td>Vue Instance</td><td>对象加载前触发。</td></tr><tr><td>ready</td><td>{Cesium, viewer, cesiumObject, vm}</td><td>对象加载成功时触发。</td></tr><tr><td>destroyed</td><td>Vue Instance</td><td>对象销毁时触发。</td></tr></tbody></table><h3 id=\"quan-ju-zu-jian-shi-li-fang-fa\"><a class=\"header-anchor\" href=\"#quan-ju-zu-jian-shi-li-fang-fa\">¶</a> 全局组件实例方法</h3><div class=\"tip\"><p>提示： vue-cesium 所有组件都包含下列 4 个方法，后续文档可能不再列出。</p></div><table><thead><tr><th>方法名</th><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>load</td><td></td><td>加载组件。</td></tr><tr><td>unload</td><td></td><td>卸载组件。</td></tr><tr><td>reload</td><td></td><td>完成一次组件卸载 / 重新加载的方法。</td></tr><tr><td>getCesiumObject</td><td>Object</td><td>获取该组件加载的 Cesium 对象或者 HTMLElement。</td></tr></tbody></table><h3 id=\"chang-liang\"><a class=\"header-anchor\" href=\"#chang-liang\">¶</a> 常量</h3><p>由于 Cesium 在 <code>vc-viewer</code> 组件初始化完成之前无法获取到，因此 Cesium 的一些常量在组件绑定时无法通过 Cesium 直接获取到，但直接传他们的值依然是可以的。</p><div class=\"tipflex\"><pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- 错误用法 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vc-viewer</span> <span class=\"hljs-attr\">:sceneMode</span>=<span class=\"hljs-string\">&quot;Cesium.SceneMode.SCENE3D&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vc-viewer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n</code></pre><pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- 正确用法 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vc-viewer</span> <span class=\"hljs-attr\">:sceneMode</span>=<span class=\"hljs-string\">&quot;3&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vc-viewer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n</code></pre></div><h4 id=\"horizontalorigin\"><a class=\"header-anchor\" href=\"#horizontalorigin\">¶</a> HorizontalOrigin</h4><p>用于描述文本、布告板等对象水平对齐方式。</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>CENTER</td><td>0</td><td>居中对齐</td></tr><tr><td>LEFT</td><td>1</td><td>左对齐</td></tr><tr><td>RIGHT</td><td>-1</td><td>右对齐</td></tr></tbody></table><h4 id=\"verticalorigin\"><a class=\"header-anchor\" href=\"#verticalorigin\">¶</a> VerticalOrigin</h4><p>用于描述文本、布告板等对象垂直对齐方式。</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>CENTER</td><td>0</td><td>居中对齐</td></tr><tr><td>BOTTOM</td><td>1</td><td>底部对齐</td></tr><tr><td>BASELINE</td><td>2</td><td>基线对齐</td></tr><tr><td>TOP</td><td>-1</td><td>顶部对齐</td></tr></tbody></table><h4 id=\"heightreference\"><a class=\"header-anchor\" href=\"#heightreference\">¶</a> HeightReference</h4><p>用于描述文本、布告板等对象高度模式。</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>NONE</td><td>0</td><td>绝对高度</td></tr><tr><td>CLAMP_TO_GROUND</td><td>1</td><td>贴地</td></tr><tr><td>RELATIVE_TO_GROUND</td><td>2</td><td>相对于地面</td></tr></tbody></table><h4 id=\"shadowmode\"><a class=\"header-anchor\" href=\"#shadowmode\">¶</a> ShadowMode</h4><p>用于描述阴影接收方式。</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>DISABLED</td><td>0</td><td>不接收不反射</td></tr><tr><td>ENABLED</td><td>1</td><td>接收切反射</td></tr><tr><td>CAST_ONLY</td><td>2</td><td>仅反射</td></tr><tr><td>RECEIVE_ONLY</td><td>3</td><td>仅接收</td></tr></tbody></table><h4 id=\"cornertype\"><a class=\"header-anchor\" href=\"#cornertype\">¶</a> CornerType</h4><p>用于描述 corridor 转角样式</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>ROUNDED</td><td>0</td><td>圆角</td></tr><tr><td>MITERED</td><td>1</td><td>直角</td></tr><tr><td>BEVELED</td><td>2</td><td>斜角</td></tr></tbody></table><h4 id=\"classificationtype\"><a class=\"header-anchor\" href=\"#classificationtype\">¶</a> ClassificationType</h4><p>描述贴对象方式</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>TERRAIN</td><td>0</td><td>只贴地</td></tr><tr><td>CESIUM_3D_TILE</td><td>1</td><td>只贴 3DTile</td></tr><tr><td>BOTH</td><td>2</td><td>都贴</td></tr></tbody></table><h4 id=\"bingmapsstyle\"><a class=\"header-anchor\" href=\"#bingmapsstyle\">¶</a> BingMapsStyle</h4><p>描述 BingMaps 风格</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>AERIAL</td><td>&#39;Aerial&#39;</td><td>卫星影像</td></tr><tr><td>AERIAL_WITH_LABELS</td><td>&#39;AerialWithLabels&#39;</td><td>卫星影像带标注</td></tr><tr><td>AERIAL_WITH_LABELS_ON_DEMAND</td><td>&#39;AerialWithLabelsOnDemand&#39;</td><td>卫星影像带主要的标注</td></tr><tr><td>ROAD</td><td>&#39;Road&#39;</td><td>道路</td></tr><tr><td>ROAD_ON_DEMAND</td><td>&#39;RoadOnDemand&#39;</td><td>主要道路</td></tr><tr><td>CANVAS_DARK</td><td>&#39;CanvasDark&#39;</td><td>暗色</td></tr><tr><td>CANVAS_LIGHT</td><td>&#39;CanvasGray&#39;</td><td>亮色</td></tr><tr><td>CANVAS_GRAY</td><td>&#39;CanvasLight&#39;</td><td>灰色</td></tr><tr><td>ORDNANCE_SURVEY</td><td>&#39;OrdnanceSurvey&#39;</td><td>军械测量图像。 该图像仅在英国伦敦地区可见。</td></tr><tr><td>COLLINS_BART</td><td>&#39;CollinsBart&#39;</td><td>柯林斯·巴特（Collins Bart）的影像。</td></tr></tbody></table><h4 id=\"labelstyle\"><a class=\"header-anchor\" href=\"#labelstyle\">¶</a> LabelStyle</h4><p>描述文本风格</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>FILL</td><td>0</td><td>填充</td></tr><tr><td>OUTLINE</td><td>1</td><td>轮廓</td></tr><tr><td>FILL_AND_OUTLINE</td><td>2</td><td>填充和轮廓</td></tr></tbody></table><h4 id=\"arctype\"><a class=\"header-anchor\" href=\"#arctype\">¶</a> ArcType</h4><p>描述线段样式</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>NONE</td><td>0</td><td>直线</td></tr><tr><td>GEODESIC</td><td>1</td><td>测地线</td></tr><tr><td>RHUMB</td><td>2</td><td>按照恒向线或等倾角螺旋</td></tr></tbody></table><h4 id=\"scenemode\"><a class=\"header-anchor\" href=\"#scenemode\">¶</a> SceneMode</h4><p>描述场景是 3D、2D 或者是 2.5D</p><table><thead><tr><th>Name</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>MORPHING</td><td>0</td><td>SceneMode 正在变换，如 3D 变到 2D。</td></tr><tr><td>COLUMBUS_VIEW</td><td>1</td><td>哥伦布视图模式。 一个 2.5D 透视图，在该图上面绘制了平坦的地图，并绘制了高度非零的对象。</td></tr><tr><td>SCENE2D</td><td>2</td><td>2D 模式。 使用正射投影从上至下查看地图。</td></tr><tr><td>SCENE3D</td><td>3</td><td>3D 模式。 地球的一个传统 3D 透视图。</td></tr></tbody></table><h4 id=\"mapmode2d\"><a class=\"header-anchor\" href=\"#mapmode2d\">¶</a> MapMode2D</h4><p>描述地图如何在 2D 模式下运行。</p><table><thead><tr><th>Name</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>ROTATE</td><td>0</td><td>二维地图可以绕 z 轴旋转。</td></tr><tr><td>INFINITE_SCROLL</td><td>1</td><td>二维地图可以在水平方向上无限滚动。</td></tr></tbody></table><h4 id=\"can-kao\"><a class=\"header-anchor\" href=\"#can-kao\">¶</a> 参考</h4><blockquote><p><strong><a href=\"https://cesium.com/docs/cesiumjs-ref-doc/global.html\">官方文档</a></strong></p></blockquote><h3 id=\"lei-xing\"><a class=\"header-anchor\" href=\"#lei-xing\">¶</a> 类型</h3><p><code>vue-cesium</code> 各组件传参支持直接传 Cesium 实例化的参数，但由于 Cesium 在 <code>vc-viewer</code> 组件初始化完成之前无法获取到，所以如果是传 Cesium 实例的参数需要在 <code>vc-viewer</code> 组件 <code>ready</code> 事件之后来初始化这些参数。为了简化开发，特将一些常用的参数抽象成<code>简单对象(PlainObject)</code>，可以提前对这些对象进行赋值。</p><div class=\"tipflex\"><pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- 完整写法 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vc-viewer</span> @<span class=\"hljs-attr\">ready</span>=<span class=\"hljs-string\">&quot;onViewerReady&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vc-entity</span> <span class=\"hljs-attr\">:position</span>=<span class=\"hljs-string\">&quot;position&quot;</span> <span class=\"hljs-attr\">:point</span>=<span class=\"hljs-string\">&quot;point&quot;</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vc-entity</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vc-viewer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-attr\">position</span>: <span class=\"hljs-literal\">null</span>,\n        <span class=\"hljs-attr\">point</span>: <span class=\"hljs-literal\">null</span>\n      }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n      <span class=\"hljs-title function_\">onViewerReady</span>(<span class=\"hljs-params\">{ Cesium, viewer }</span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">position</span> = <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian3</span>.<span class=\"hljs-title function_\">fromDegrees</span>(<span class=\"hljs-number\">108</span>, <span class=\"hljs-number\">35</span>, <span class=\"hljs-number\">1000</span>)\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">point</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-title class_\">PointGraphics</span>({\n          <span class=\"hljs-attr\">pixelSize</span>: <span class=\"hljs-number\">28</span>,\n          <span class=\"hljs-attr\">color</span>: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Color</span>.<span class=\"hljs-property\">RED</span>\n        })\n      }\n    }\n  }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre><pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- 建议写法 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vc-viewer</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vc-entity</span> <span class=\"hljs-attr\">:position</span>=<span class=\"hljs-string\">&quot;[108, 35, 1000]&quot;</span> <span class=\"hljs-attr\">:point</span>=<span class=\"hljs-string\">&quot;{pixelSize: 28, color: &#39;red&#39;}&quot;</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vc-entity</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vc-viewer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n</code></pre></div><p>以下分别描述：</p><h4 id=\"cartesian2\"><a class=\"header-anchor\" href=\"#cartesian2\">¶</a> Cartesian2</h4><p>表达 <code>Cesium.Cartesian2</code> 有 2 种方式：</p><ul><li><code>Cartesian2Option</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">Cartesian</span>2Option {\n  <span class=\"hljs-attr\">x</span>: number\n  <span class=\"hljs-attr\">y</span>: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[number, number]\n</code></pre><h4 id=\"array-cartesian2\"><a class=\"header-anchor\" href=\"#array-cartesian2\">¶</a> Array&lt;Cartesian2&gt;</h4><p>表达 <code>Array&lt;Cartesian2&gt;</code> 有 2 种方式：</p><ul><li><code>Array&lt;Cartesian2Option&gt;</code></li></ul><pre><code class=\"hljs language-js\">[{ <span class=\"hljs-attr\">x</span>: number,  <span class=\"hljs-attr\">y</span>: number }, ..., { <span class=\"hljs-attr\">x</span>: number,  <span class=\"hljs-attr\">y</span>: number }]\n</code></pre><ul><li><code>Array&lt;Array&lt;number&gt;&gt;</code></li></ul><pre><code class=\"hljs language-js\">[[<span class=\"hljs-attr\">x</span>: number, <span class=\"hljs-attr\">y</span>: number],..., [<span class=\"hljs-attr\">x</span>: number, <span class=\"hljs-attr\">y</span>: number]]\n</code></pre><h4 id=\"cartesian3\"><a class=\"header-anchor\" href=\"#cartesian3\">¶</a> Cartesian3</h4><p>表达 <code>Cesium.Cartesian3</code> 有 3 种方式:</p><ul><li><code>Cartesian3Option</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">Cartesian</span>3Option {\n  <span class=\"hljs-attr\">x</span>: number\n  <span class=\"hljs-attr\">y</span>: number\n  <span class=\"hljs-attr\">z</span>: number\n}\n</code></pre><ul><li><code>CartographicInDegreeOption</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\ninterface <span class=\"hljs-title class_\">CartographicInDegreeOption</span> {\n  <span class=\"hljs-attr\">lng</span>: number\n  <span class=\"hljs-attr\">lat</span>: number\n  height?: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\n;[(<span class=\"hljs-attr\">lng</span>: number), (<span class=\"hljs-attr\">lat</span>: number), (<span class=\"hljs-attr\">height</span>: number)]\n</code></pre><h4 id=\"array-cartesian3\"><a class=\"header-anchor\" href=\"#array-cartesian3\">¶</a> Array&lt;Cartesian3&gt;</h4><p>表达 <code>Array&lt;Cartesian3&gt;</code> 有 4 种方式:</p><ul><li><code>Array&lt;Cartesian3Option&gt;</code></li></ul><pre><code class=\"hljs language-js\">\n[{ <span class=\"hljs-attr\">x</span>: number, <span class=\"hljs-attr\">y</span>: number, <span class=\"hljs-attr\">z</span>: number },...,{ <span class=\"hljs-attr\">x</span>: number, <span class=\"hljs-attr\">y</span>: number, <span class=\"hljs-attr\">z</span>: number }]\n</code></pre><ul><li><code>Array&lt;CartographicInDegreeOption&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\n[{ <span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, height?: number },..., { <span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, height?: number }]\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 经度、纬度、高度（单位度）</span>\n[<span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number, ..., <span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number]\n</code></pre><ul><li><code>Array&lt;Array&lt;number&gt;&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 经度、纬度、高度（单位度）</span>\n[[<span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number], ..., [<span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number]]\n</code></pre><h4 id=\"cartesian4\"><a class=\"header-anchor\" href=\"#cartesian4\">¶</a> Cartesian4</h4><p>表达 <code>Cesium.Cartesian4</code> 有 2 种方式:</p><ul><li><code>Cartesian4Option</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">Cartesian</span>4Option {\n  x?: number\n  y?: number\n  z?: number\n  w?: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[(<span class=\"hljs-attr\">x</span>: number), (<span class=\"hljs-attr\">y</span>: number), (<span class=\"hljs-attr\">z</span>: number), (<span class=\"hljs-attr\">w</span>: number)]\n</code></pre><h4 id=\"rectange-coordinates\"><a class=\"header-anchor\" href=\"#rectange-coordinates\">¶</a> Rectange(coordinates)</h4><p>表达 <code>Cesium.Rectange</code> 有 3 种方式:</p><ul><li><code>RectangleInDegreeOption</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\ninterface <span class=\"hljs-title class_\">RectangleInDegreeOption</span> {\n  <span class=\"hljs-attr\">west</span>: number\n  <span class=\"hljs-attr\">south</span>: number\n  <span class=\"hljs-attr\">east</span>: number\n  <span class=\"hljs-attr\">north</span>: number\n}\n</code></pre><ul><li><code>Cartesian4Option</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位弧度</span>\ninterface <span class=\"hljs-title class_\">Cartesian</span>4Option {\n  x?: number\n  y?: number\n  z?: number\n  w?: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\n;[(<span class=\"hljs-attr\">west</span>: number), (<span class=\"hljs-attr\">south</span>: number), (<span class=\"hljs-attr\">east</span>: number), (<span class=\"hljs-attr\">north</span>: number)]\n</code></pre><h4 id=\"camera\"><a class=\"header-anchor\" href=\"#camera\">¶</a> Camera</h4><p>表达 <code>Cesium.Camera</code> 有 1 种方式:</p><ul><li><code>CameraOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">CameraOption</span> {\n  position?: <span class=\"hljs-title class_\">Cartesian</span>3Option | <span class=\"hljs-title class_\">CartographicInDegreeOption</span> | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;\n  retangle?: <span class=\"hljs-title class_\">RectangleInDegreeOption</span> | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;\n  heading?: number\n  pitch?: number\n  roll?: number\n}\n</code></pre><h4 id=\"polygonhierarchy\"><a class=\"header-anchor\" href=\"#polygonhierarchy\">¶</a> PolygonHierarchy</h4><p>表达 <code>Cesium.PolygonHierarchy</code> 的方式有 2 种:</p><ul><li><code>PolygonHierarchyOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">PolygonHierarchyOption</span> {\n  <span class=\"hljs-attr\">positions</span>: <span class=\"hljs-title class_\">Array</span>&lt;<span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian3</span>&gt; | <span class=\"hljs-title class_\">Array</span>&lt;<span class=\"hljs-title class_\">Cartesian</span>3Option&gt; | <span class=\"hljs-title class_\">Array</span>&lt;<span class=\"hljs-title class_\">Array</span>&lt;number&gt;&gt;\n  holes?: <span class=\"hljs-title class_\">Array</span>&lt;<span class=\"hljs-title class_\">PolygonHierarchyOption</span>&gt;\n}\n</code></pre><ul><li><code>Array&lt;Cartesian3Option&gt;</code></li></ul><pre><code class=\"hljs language-js\">[{<span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number},...,{<span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number}]\n</code></pre><h4 id=\"nearfarscalar\"><a class=\"header-anchor\" href=\"#nearfarscalar\">¶</a> NearFarScalar</h4><p>表达 <code>Cesium.NearFarScalar</code> 的方式有 2 种：</p><ul><li><code>NearFarScalarOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">NearFarScalarOption</span> {\n  <span class=\"hljs-attr\">near</span>: number\n  <span class=\"hljs-attr\">nearValue</span>: number\n  <span class=\"hljs-attr\">far</span>: number\n  <span class=\"hljs-attr\">farValue</span>: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">[<span class=\"hljs-attr\">near</span>: number, <span class=\"hljs-attr\">nearValue</span>: number, <span class=\"hljs-attr\">far</span>: number, <span class=\"hljs-attr\">farValue</span>: number, ..., <span class=\"hljs-attr\">near</span>: number, <span class=\"hljs-attr\">nearValue</span>: number, <span class=\"hljs-attr\">far</span>: number, <span class=\"hljs-attr\">farValue</span>: number]\n</code></pre><h4 id=\"distancedisplaycondition\"><a class=\"header-anchor\" href=\"#distancedisplaycondition\">¶</a> DistanceDisplayCondition</h4><p>表达 <code>Cesium.DistanceDisplayCondition</code> 的方式有 2 种：</p><ul><li><code>DistanceDisplayConditionOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">DistanceDisplayConditionOption</span> {\n  <span class=\"hljs-attr\">near</span>: number\n  <span class=\"hljs-attr\">far</span>: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">[<span class=\"hljs-attr\">near</span>: number, <span class=\"hljs-attr\">far</span>: number, ..., <span class=\"hljs-attr\">near</span>: number, <span class=\"hljs-attr\">far</span>: number]\n</code></pre><h4 id=\"color\"><a class=\"header-anchor\" href=\"#color\">¶</a> Color</h4><p>表达 <code>Cesium.Color</code> 的方式有 4 种：</p><ul><li><code>string</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// css color</span>\n<span class=\"hljs-string\">&#39;white&#39;</span>\n<span class=\"hljs-string\">&#39;#fff&#39;</span>\n<span class=\"hljs-string\">&#39;rgba(255,255,255,0)&#39;</span>\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// in byte</span>\n;[(<span class=\"hljs-attr\">r</span>: number), (<span class=\"hljs-attr\">g</span>: number), (<span class=\"hljs-attr\">b</span>: number), (<span class=\"hljs-attr\">a</span>: number)]\n</code></pre><ul><li><code>ColorInByteOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">ColorInByteOption</span> {\n  <span class=\"hljs-attr\">red</span>: number\n  <span class=\"hljs-attr\">green</span>: number\n  <span class=\"hljs-attr\">blue</span>: number\n  alpha?: number\n}\n</code></pre><ul><li><code>Cartesian4Option</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 范围从0（无强度）到1.0（全强度）。</span>\ninterface <span class=\"hljs-title class_\">Cartesian</span>4Option {\n  x?: number\n  y?: number\n  z?: number\n  w?: number\n}\n</code></pre><h4 id=\"material\"><a class=\"header-anchor\" href=\"#material\">¶</a> Material</h4><p>表达 <code>Cesium.Material</code>, <code>Cesium.MaterialProperty</code> 的方式有 3 种：</p><ul><li><code>string</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 颜色或者图片url</span>\n<span class=\"hljs-string\">&#39;red&#39;</span>\n<span class=\"hljs-string\">&#39;https://zouyaoji.top/vue-cesium/favicon.png&#39;</span>\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 颜色</span>\n;[<span class=\"hljs-number\">255</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">255</span>]\n</code></pre><ul><li><code>MaterialOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">MaterialOption</span> {\n    <span class=\"hljs-attr\">fabric</span>: {\n    <span class=\"hljs-attr\">type</span>: string\n    <span class=\"hljs-attr\">uniforms</span>: {\n      color?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Color</span> | string | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | <span class=\"hljs-title class_\">ColorInByteOption</span> | <span class=\"hljs-title class_\">Cartesian</span>4Option\n      image?: string | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n      repeat?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian2</span> | <span class=\"hljs-title class_\">Cartesian</span>2Option | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | number\n      transparent?: boolean\n      evenColor?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Color</span> | string | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | <span class=\"hljs-title class_\">ColorInByteOption</span> | <span class=\"hljs-title class_\">Cartesian</span>4Option\n      oddColor?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Color</span> | string | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | <span class=\"hljs-title class_\">ColorInByteOption</span> | <span class=\"hljs-title class_\">Cartesian</span>4Option\n      gapColor?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Color</span> | string | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | <span class=\"hljs-title class_\">ColorInByteOption</span> | <span class=\"hljs-title class_\">Cartesian</span>4Option\n      dashLength?: number\n      dashPattern?: number\n      glowPower?: number\n      taperPower?: number\n      outlineColor?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Color</span> | string | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | <span class=\"hljs-title class_\">ColorInByteOption</span> | <span class=\"hljs-title class_\">Cartesian</span>4Option\n      outlineWidth?: number\n      cellAlpha?: number\n      lineCount?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian2</span> | <span class=\"hljs-title class_\">Cartesian</span>2Option | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | number\n      lineThickness?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian2</span> | <span class=\"hljs-title class_\">Cartesian</span>2Option | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | number\n      lineOffset?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian2</span> | <span class=\"hljs-title class_\">Cartesian</span>2Option | <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | number\n      orientation?: number | <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">StripeOrientation</span>\n      offset?: number\n    }\n  }\n  strict?: boolean\n  translucent?: boolean | <span class=\"hljs-title class_\">AnyFunction</span>\n  minificationFilter?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">TextureMinificationFilter</span>\n  magnificationFilter?: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">TextureMagnificationFilter</span>\n}\n</code></pre><h4 id=\"boundingrectangle\"><a class=\"header-anchor\" href=\"#boundingrectangle\">¶</a> BoundingRectangle</h4><p>表达 <code>Cesium.BoundingRectangle</code> 的方式有 2 种：</p><ul><li><code>BoundingRectangleOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">BoundingRectangleOption</span> {\n  <span class=\"hljs-attr\">x</span>: number\n  <span class=\"hljs-attr\">y</span>: number\n  <span class=\"hljs-attr\">width</span>: number\n  <span class=\"hljs-attr\">height</span>: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[(<span class=\"hljs-attr\">x</span>: number), (<span class=\"hljs-attr\">y</span>: number), (<span class=\"hljs-attr\">width</span>: number), (<span class=\"hljs-attr\">height</span>: number)]\n</code></pre><h4 id=\"plane\"><a class=\"header-anchor\" href=\"#plane\">¶</a> Plane</h4><p>表达 <code>Cesium.Plane</code> 的方式有 2 种：</p><ul><li><code>PlaneOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">PlaneOption</span> {\n  <span class=\"hljs-attr\">normal</span>: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian3</span> | <span class=\"hljs-title class_\">Cartesian</span>3Option | <span class=\"hljs-title class_\">CartographicInDegreeOption</span> | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;\n  <span class=\"hljs-attr\">distance</span>: number\n}\n</code></pre><ul><li><code>Array&lt;any&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[(<span class=\"hljs-attr\">plane</span>: <span class=\"hljs-title class_\">Array</span>&lt;number&gt; | <span class=\"hljs-title class_\">Array</span>&lt;<span class=\"hljs-title class_\">Cartesian</span>3Option&gt;), (<span class=\"hljs-attr\">distance</span>: number)]\n</code></pre><h4 id=\"translationrotationscale\"><a class=\"header-anchor\" href=\"#translationrotationscale\">¶</a> TranslationRotationScale</h4><p>表达 <code>Cesium.TranslationRotationScale</code> 的方式有 2 种：</p><ul><li><code>TranslationRotationScaleOption</code></li></ul><pre><code class=\"hljs language-js\">interface <span class=\"hljs-title class_\">TranslationRotationScaleOption</span> {\n  <span class=\"hljs-attr\">translation</span>: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian3</span> | <span class=\"hljs-title class_\">Cartesian</span>3Option | <span class=\"hljs-title class_\">CartographicInDegreeOption</span> | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;\n  <span class=\"hljs-attr\">rotation</span>: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Quaternion</span> | <span class=\"hljs-title class_\">Cartesian</span>4Option | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;\n  <span class=\"hljs-attr\">scale</span>: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian3</span> | <span class=\"hljs-title class_\">Cartesian</span>3Option | <span class=\"hljs-title class_\">CartographicInDegreeOption</span> | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;\n}\n</code></pre><ul><li><code>Array&lt;any&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[\n  (<span class=\"hljs-attr\">translation</span>: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian3</span> | <span class=\"hljs-title class_\">Cartesian</span>3Option | <span class=\"hljs-title class_\">CartographicInDegreeOption</span> | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;),\n  (<span class=\"hljs-attr\">rotation</span>: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Quaternion</span> | <span class=\"hljs-title class_\">Cartesian</span>4Option | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;),\n  (<span class=\"hljs-attr\">scale</span>: <span class=\"hljs-title class_\">Cesium</span>.<span class=\"hljs-property\">Cartesian3</span> | <span class=\"hljs-title class_\">Cartesian</span>3Option | <span class=\"hljs-title class_\">CartographicInDegreeOption</span> | <span class=\"hljs-title class_\">Array</span>&lt;number&gt;)\n]\n</code></pre>", 151);

function render(_ctx, _cache) {
  const _component_right_nav = Object(vue_esm_browser["resolveComponent"])("right-nav");

  return Object(vue_esm_browser["openBlock"])(), Object(vue_esm_browser["createElementBlock"])("section", _hoisted_1, [_hoisted_2, Object(vue_esm_browser["createVNode"])(_component_right_nav)]);
}
// CONCATENATED MODULE: ./website/docs/zh-CN/base.md?vue&type=template&id=92111fd6

// CONCATENATED MODULE: ./website/docs/zh-CN/base.md

const script = {}
script.render = render

/* harmony default export */ var base = __webpack_exports__["default"] = (script);

/***/ })

}]);