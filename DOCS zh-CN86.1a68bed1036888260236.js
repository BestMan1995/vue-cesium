(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[177],{

/***/ 705:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm-browser.js
var vue_esm_browser = __webpack_require__(0);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/zh-CN/quickstart.md?vue&type=template&id=084e338b

const _hoisted_1 = {
  class: "content element-doc"
};

const _hoisted_2 = /*#__PURE__*/Object(vue_esm_browser["createStaticVNode"])("<h2 id=\"kuai-su-shang-shou\"><a class=\"header-anchor\" href=\"#kuai-su-shang-shou\">¶</a> 快速上手</h2><p>本节将介绍如何在项目中使用 VueCesium。</p><h3 id=\"shi-yong-zu-jian\"><a class=\"header-anchor\" href=\"#shi-yong-zu-jian\">¶</a> 使用组件</h3><h3 id=\"wan-zheng-yin-ru-suo-you-zu-jian\"><a class=\"header-anchor\" href=\"#wan-zheng-yin-ru-suo-you-zu-jian\">¶</a> 完整引入所有组件</h3><blockquote><p>main.ts</p></blockquote><pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">VueCesium</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#39;vue-cesium/dist/index.css&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">App</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">createApp</span>(<span class=\"hljs-title class_\">App</span>)\n\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title class_\">VueCesium</span>)\napp.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#39;#app&#39;</span>)\n</code></pre><h3 id=\"an-xu-yin-ru-zu-jian\"><a class=\"header-anchor\" href=\"#an-xu-yin-ru-zu-jian\">¶</a> 按需引入组件</h3><p><code>VueCesium</code>的 JS 代码默认支持基于 ES modules 的 <a href=\"https://webpack.js.org/guides/tree-shaking/\">摇树 tree shaking</a>。</p><blockquote><p>App.vue</p></blockquote><pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vc-viewer</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vc-viewer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">import</span> { defineComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n  <span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">VcViewer</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">defineComponent</span>({\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#39;app&#39;</span>\n    <span class=\"hljs-attr\">components</span>: {\n      <span class=\"hljs-title class_\">VcViewer</span>\n    }\n  })\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre><h3 id=\"yang-shi-de-yin-ru\"><a class=\"header-anchor\" href=\"#yang-shi-de-yin-ru\">¶</a> 样式的引入</h3><p>我们<strong>强烈建议直接引入全部的样式文件</strong>，虽然这看起来会增大整个应用的体积，但这样做可以避免引入额外的打包工具插件（减少负担），你还可以通过 <a href=\"https://www.cloudflare.com/learning/cdn/what-is-a-cdn/\">CDN</a> 的方式来加载样式文件，从而使得你的应用加载更快。</p><p>通过 JS 的方式引入</p><pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#39;vue-cesium/dist/index.css&#39;</span>\n</code></pre><p>通过 HTML 的头文件引入</p><pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- index.html --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;//cdn.jsdelivr.net/npm/vue-cesium@next/dist/index.css&quot;</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n</code></pre><h3 id=\"shi-yong-starter-kit\"><a class=\"header-anchor\" href=\"#shi-yong-starter-kit\">¶</a> 使用 Starter Kit</h3><p>我们提供了通用的<a href=\"https://github.com/zouyaoji/vue-cesium-starter\">项目模板</a>，你可以直接使用，另外我们还提供了 <a href=\"https://github.com/zouyaoji/vue-cesium-vite-starter\">Vite 模板</a> 以及 <a href=\"https://github.com/zouyaoji/vue-cesium-electron-vite-starter\">Vite + Electron 模板</a>。</p><p>如果不希望使用我们提供的模板，请继续阅读。</p><h3 id=\"quan-ju-pei-zhi\"><a class=\"header-anchor\" href=\"#quan-ju-pei-zhi\">¶</a> 全局配置</h3><p>在引入 <code>VueCesium</code> 时，可以传入一个全局的配置对象。改对象目前支持 <code>cesiumPath</code> 、 <code>accessToken</code> 以及 <code>locale</code> 字段。<code>cesiumPath</code> 用于改变组件默认加载的 <code>Cesium</code> 库，<code>accessToken</code> 设置 <code>Cesium.Ion.defaultAccessToken</code> 的值。而 <code>locale</code> 用于国际化语言，具体使用方式见下一节文档。</p><h3 id=\"wan-zheng-yin-ru-vuecesium\"><a class=\"header-anchor\" href=\"#wan-zheng-yin-ru-vuecesium\">¶</a> 完整引入 VueCesium</h3><p>在 main.js 中写入以下内容：</p><pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">VueCesium</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#39;vue-cesium/dist/index.css&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">App</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">createApp</span>(<span class=\"hljs-title class_\">App</span>)\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title class_\">VueCesium</span>, {\n  <span class=\"hljs-comment\">// cesiumPath 是指引用 Cesium.js 的Web服务地址，可以是本地或者 CDN 地址如</span>\n  <span class=\"hljs-comment\">// cesiumPath: /static/Cesium/Cesium.js</span>\n  <span class=\"hljs-comment\">// cesiumPath: &#39;https://unpkg.com/cesium/Build/Cesium/Cesium.js&#39;</span>\n  <span class=\"hljs-comment\">// cesiumPath: &#39;https://cdn.jsdelivr.net/npm/cesium@latest/Build/Cesium/Cesium.js&#39;</span>\n  <span class=\"hljs-attr\">cesiumPath</span>: <span class=\"hljs-string\">&#39;https://cdn.jsdelivr.net/npm/cesium@latest/Build/Cesium/Cesium.js&#39;</span>,\n  <span class=\"hljs-comment\">// 如果需要使用 Cesium ion 的资源时需要指定。到 https://cesium.com/ion/ 申请一个账户，获取Access Token。不指定的话可能导致 CesiumIon 的在线影像、地形加载失败。</span>\n  <span class=\"hljs-attr\">accessToken</span>: <span class=\"hljs-string\">&#39;Your Cesium Ion defaultAccessToken&#39;</span>\n})\napp.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#39;#app&#39;</span>)\n</code></pre><h3 id=\"an-xu-yin-ru-vuecesium\"><a class=\"header-anchor\" href=\"#an-xu-yin-ru-vuecesium\">¶</a> 按需引入 VueCesium</h3><p>如果你只希望引入部分组件，比如 VcViewer，那么需要在 main.js 中写入以下内容：</p><pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">VcViewer</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-viewer&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">App</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">createApp</span>(<span class=\"hljs-title class_\">App</span>)\napp.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">globalProperties</span>.<span class=\"hljs-property\">$VueCesium</span> = {\n  <span class=\"hljs-attr\">cesiumPath</span>: <span class=\"hljs-string\">&#39;https://cdn.jsdelivr.net/npm/cesium@latest/Build/Cesium/Cesium.js&#39;</span>\n}\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title class_\">VcViewer</span>)\napp.<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#39;#app&#39;</span>)\n</code></pre><p>（完整组件列表以 <a href=\"https://github.com/zouyaoji/vue-cesium/blob/dev/packages/vue-cesium/component.ts\">reference</a> 为准）</p><h3 id=\"kai-shi-shi-yong\"><a class=\"header-anchor\" href=\"#kai-shi-shi-yong\">¶</a> 开始使用</h3><p>至此，一个基于 Vue 和 VueCesium 的开发环境已经搭建完毕，现在就可以编写代码了。各个组件的使用方法请参阅它们各自的文档。</p>", 30);

function render(_ctx, _cache) {
  const _component_right_nav = Object(vue_esm_browser["resolveComponent"])("right-nav");

  return Object(vue_esm_browser["openBlock"])(), Object(vue_esm_browser["createElementBlock"])("section", _hoisted_1, [_hoisted_2, Object(vue_esm_browser["createVNode"])(_component_right_nav)]);
}
// CONCATENATED MODULE: ./website/docs/zh-CN/quickstart.md?vue&type=template&id=084e338b

// CONCATENATED MODULE: ./website/docs/zh-CN/quickstart.md

const script = {}
script.render = render

/* harmony default export */ var quickstart = __webpack_exports__["default"] = (script);

/***/ })

}]);