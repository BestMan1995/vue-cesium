(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[154],{

/***/ 598:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm-browser.js
var vue_esm_browser = __webpack_require__(0);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/zh-CN/quickstart.md?vue&type=template&id=11f4d638

var _hoisted_1 = {
  class: "content element-doc"
};

var _hoisted_2 = /*#__PURE__*/Object(vue_esm_browser["l" /* createStaticVNode */])("<h2 id=\"kuai-su-shang-shou\"><a class=\"header-anchor\" href=\"#kuai-su-shang-shou\">¶</a> 快速上手</h2><p>本节将介绍如何在项目中使用 VueCesium。</p><h3 id=\"shi-yong-starter-kit\"><a class=\"header-anchor\" href=\"#shi-yong-starter-kit\">¶</a> 使用 Starter Kit</h3><p>我们提供了通用的<a href=\"https://github.com/zouyaoji/vue-cesium-starter\">项目模板</a>，你可以直接使用，另外我们还提供了 Vite <a href=\"https://github.com/zouyaoji/vue-cesium-vite-starter\">模板</a>。</p><p>如果不希望使用我们提供的模板，请继续阅读。</p><h3 id=\"yin-ru-vuecesium\"><a class=\"header-anchor\" href=\"#yin-ru-vuecesium\">¶</a> 引入 VueCesium</h3><p>你可以引入整个 VueCesium，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 VueCesium</p><h4 id=\"wan-zheng-yin-ru\"><a class=\"header-anchor\" href=\"#wan-zheng-yin-ru\">¶</a> 完整引入</h4><p>在 main.js 中写入以下内容：</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> VueCesium <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#39;vue-cesium/lib/theme-default/index.css&#39;</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\napp.use(VueCesium)\napp.mount(<span class=\"hljs-string\">&#39;#app&#39;</span>)\n</code></pre><p>以上代码便完成了 VueCesium 的引入。需要注意的是，样式文件需要单独引入。</p><h4 id=\"an-xu-yin-ru\"><a class=\"header-anchor\" href=\"#an-xu-yin-ru\">¶</a> 按需引入</h4><p>借助 <a href=\"https://github.com/ant-design/babel-plugin-import\">babel-plugin-import</a>，我们可以只引入需要的组件，以达到减小项目体积的目的。</p><p>首先，安装 babel-plugin-import:</p><pre><code class=\"hljs language-bash\">$ npm install babel-plugin-import -D\n</code></pre><p>或者</p><pre><code class=\"hljs language-bash\">$ yarn add babel-plugin-import -D\n</code></pre><p>然后，将 babel.config.js 修改为：</p><pre><code class=\"hljs language-js\"><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">plugins</span>: [\n    [\n      <span class=\"hljs-string\">&#39;import&#39;</span>,\n      {\n        <span class=\"hljs-attr\">libraryName</span>: <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n      }\n    ]\n  ]\n}\n</code></pre><p>接下来，如果你只希望引入部分组件，比如 Viewer，那么需要在 main.js 中写入以下内容：</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> { VcViewer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-viewer&#39;</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\napp.component(VcViewer.name, VcViewer)\n\n<span class=\"hljs-comment\">/* or\n * app.use(VcViewer)\n */</span>\n\napp.mount(<span class=\"hljs-string\">&#39;#app&#39;</span>)\n</code></pre><p>完整组件列表和引入方式（完整组件列表以 <a href=\"https://github.com/zouyaoji/vue-cesium/tree/dev/packages\">reference</a> 为准）</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> { VcViewer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> components = [VcViewer]\n\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\n\ncomponents.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">component</span> =&gt;</span> {\n  app.component(component.name, component)\n})\n</code></pre><h3 id=\"quan-ju-pei-zhi\"><a class=\"header-anchor\" href=\"#quan-ju-pei-zhi\">¶</a> 全局配置</h3><p>在引入 VueCesium 时，可以传入一个全局配置对象。该对象目前支持 <code>cesiumPath</code> 与 <code>accessToken</code> 字段。<code>cesiumPath</code> 用于指定 VueCesium 加载的 <code>CesiumJS</code> 库的地址，支持加载官方版本Cesium或者第三方基于Cesium开发的版本，<strong>注意：</strong> 要求引入 Build 目录的文件。 <code>accessToken</code> 用于设置 <code>Cesium.Ion.defaultAccessToken</code> 。按照引入 VueCesium 的方式，具体操作如下：</p><p>完整引入 VueCesium：</p><pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> VueCesium <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>;\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\napp.use(VueCesium, {\n  <span class=\"hljs-comment\">// cesiumPath 是指引用的Cesium.js路径，如</span>\n  <span class=\"hljs-comment\">// cesiumPath: /static/Cesium/Cesium.js</span>\n  <span class=\"hljs-comment\">// cesiumPath: &#39;https://unpkg.com/cesium/Build/Cesium/Cesium.js&#39;</span>\n  <span class=\"hljs-attr\">cesiumPath</span>: <span class=\"hljs-string\">&#39;Your CesiumJS Path&#39;</span>,\n  <span class=\"hljs-comment\">// 使用Cesium ion的数据源需要到https://cesium.com/ion/申请一个账户，获取Access Token。不指定的话可能导致 CesiumIon 的在线影像、地形加载失败</span>\n  <span class=\"hljs-attr\">accessToken</span>: <span class=\"hljs-string\">&#39;Your Cesium Ion defaultAccessToken&#39;</span>\n})\n\n</code></pre><p>按需引入 VueCesium</p><pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> { VcViewer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> option = {\n  <span class=\"hljs-comment\">// cesiumPath 是指引用的Cesium.js路径，如</span>\n  <span class=\"hljs-comment\">// cesiumPath: /static/Cesium/Cesium.js</span>\n  <span class=\"hljs-comment\">// cesiumPath: &#39;https://unpkg.com/cesium/Build/Cesium/Cesium.js&#39;</span>\n  <span class=\"hljs-attr\">cesiumPath</span>: <span class=\"hljs-string\">&#39;Your CesiumJS Path&#39;</span>,\n  <span class=\"hljs-comment\">// 使用Cesium ion的数据源需要到https://cesium.com/ion/申请一个账户，获取Access Token。不指定的话可能导致 CesiumIon 的在线影像、地形加载失败</span>\n  <span class=\"hljs-attr\">accessToken</span>: <span class=\"hljs-string\">&#39;Your Cesium Ion defaultAccessToken&#39;</span>\n}\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\napp.config.globalProperties.$VueCesium = option\napp.use(VcViewer)\n</code></pre><h3 id=\"kai-shi-shi-yong\"><a class=\"header-anchor\" href=\"#kai-shi-shi-yong\">¶</a> 开始使用</h3><p>至此，一个基于 Vue 和 VueCesium 的开发环境已经搭建完毕，现在就可以编写代码了。各个组件的使用方法请参阅它们各自的文档。</p>", 31);

function render(_ctx, _cache) {
  var _component_right_nav = Object(vue_esm_browser["O" /* resolveComponent */])("right-nav");

  return Object(vue_esm_browser["F" /* openBlock */])(), Object(vue_esm_browser["i" /* createBlock */])("section", _hoisted_1, [_hoisted_2, Object(vue_esm_browser["n" /* createVNode */])(_component_right_nav)]);
}
// CONCATENATED MODULE: ./website/docs/zh-CN/quickstart.md?vue&type=template&id=11f4d638

// CONCATENATED MODULE: ./website/docs/zh-CN/quickstart.md

const script = {}
script.render = render

/* harmony default export */ var quickstart = __webpack_exports__["default"] = (script);

/***/ })

}]);