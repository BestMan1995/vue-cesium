(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ 521:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm-browser.js
var vue_esm_browser = __webpack_require__(0);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/en-US/base.md?vue&type=template&id=23507df9

var _hoisted_1 = {
  class: "content element-doc"
};

var _hoisted_2 = /*#__PURE__*/Object(vue_esm_browser["l" /* createStaticVNode */])("<h1>Base</h1><h2 id=\"global-component-events\"><a class=\"header-anchor\" href=\"#global-component-events\">¶</a> Global component events</h2><div class=\"tip\"><p>Tip: All components of vue-cesium include these 3 events, and subsequent documents may not list them again.</p><table><thead><tr><th>Event name</th><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td>beforeLoad</td><td>Vue Instance</td><td>Triggered before loading.</td></tr><tr><td>ready</td><td>{Cesium, viewer, vm}</td><td>Triggered when the load is successful.</td></tr><tr><td>destroyed</td><td>Vue Instance</td><td>Triggered when destroyed.</td></tr></tbody></table></div><h2 id=\"global-component-instance-method\"><a class=\"header-anchor\" href=\"#global-component-instance-method\">¶</a> Global component instance method</h2><div class=\"tip\"><p>Tip: All components of vue-cesium include these 4 methods, which may not be listed in subsequent documents.</p><table><thead><tr><th>Method name</th><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td>load</td><td></td><td>Load the component.</td></tr><tr><td>unload</td><td></td><td>Uninstall the component.</td></tr><tr><td>reload</td><td></td><td>Complete a component unloading/reloading method.</td></tr><tr><td>getCesiumObject</td><td>Object</td><td>Get the Cesium object or HTMLElement loaded by this component.</td></tr></tbody></table></div><h2 id=\"lei-xing\"><a class=\"header-anchor\" href=\"#lei-xing\">¶</a> 类型</h2><p><code>vue-cesium</code> 各组件传参支持直接传 Cesium 实例化的参数，但需要在 <code>vc-viewer</code> 组件 <code>ready</code> 事件之后来初始化这些参数。为了简化开发，特将一些常用的参数抽象成<code>简单对象(PlainObject)</code>，可以提前对这些对象进行赋值。以下分别描述：</p><h3 id=\"cartesian2\"><a class=\"header-anchor\" href=\"#cartesian2\">¶</a> Cartesian2</h3><p>表达 <code>Cesium.Cartesian2</code> 有 2 种方式：</p><ul><li><code>Cartesian2Option</code></li></ul><pre><code class=\"hljs language-js\">interface Cartesian2Option {\n  <span class=\"hljs-attr\">x</span>: number\n  <span class=\"hljs-attr\">y</span>: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[number, number]\n</code></pre><h3 id=\"array-cartesian2\"><a class=\"header-anchor\" href=\"#array-cartesian2\">¶</a> Array&lt;Cartesian2&gt;</h3><p>表达 <code>Array&lt;Cartesian2&gt;</code> 有 2 种方式：</p><ul><li><code>Array&lt;Cartesian2Option&gt;</code></li></ul><pre><code class=\"hljs language-js\">[{ <span class=\"hljs-attr\">x</span>: number,  <span class=\"hljs-attr\">y</span>: number }, ..., { <span class=\"hljs-attr\">x</span>: number,  <span class=\"hljs-attr\">y</span>: number }]\n</code></pre><ul><li><code>Array&lt;Array&lt;number&gt;&gt;</code></li></ul><pre><code class=\"hljs language-js\">[[x: number, <span class=\"hljs-attr\">y</span>: number],..., [x: number, <span class=\"hljs-attr\">y</span>: number]]\n</code></pre><h3 id=\"cartesian3\"><a class=\"header-anchor\" href=\"#cartesian3\">¶</a> Cartesian3</h3><p>表达 <code>Cesium.Cartesian3</code> 有 3 种方式:</p><ul><li><code>Cartesian3Option</code></li></ul><pre><code class=\"hljs language-js\">interface Cartesian3Option {\n  <span class=\"hljs-attr\">x</span>: number\n  <span class=\"hljs-attr\">y</span>: number\n  <span class=\"hljs-attr\">z</span>: number\n}\n</code></pre><ul><li><code>CartographicInDegreeOption</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\ninterface CartographicInDegreeOption {\n  <span class=\"hljs-attr\">lng</span>: number\n  <span class=\"hljs-attr\">lat</span>: number\n  height?: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\n;[(lng: number), (lat: number), (height: number)]\n</code></pre><h3 id=\"array-cartesian3\"><a class=\"header-anchor\" href=\"#array-cartesian3\">¶</a> Array&lt;Cartesian3&gt;</h3><p>表达 <code>Array&lt;Cartesian3&gt;</code> 有 4 种方式:</p><ul><li><code>Array&lt;Cartesian3Option&gt;</code></li></ul><pre><code class=\"hljs language-js\">\n[{ <span class=\"hljs-attr\">x</span>: number, <span class=\"hljs-attr\">y</span>: number, <span class=\"hljs-attr\">z</span>: number },...,{ <span class=\"hljs-attr\">x</span>: number, <span class=\"hljs-attr\">y</span>: number, <span class=\"hljs-attr\">z</span>: number }]\n</code></pre><ul><li><code>Array&lt;CartographicInDegreeOption&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\n[{ <span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, height?: number },..., { <span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, height?: number }]\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 经度、纬度、高度（单位度）</span>\n[lng: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number, ..., <span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number]\n</code></pre><ul><li><code>Array&lt;Array&lt;number&gt;&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 经度、纬度、高度（单位度）</span>\n[[lng: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number], ..., [lng: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number]]\n</code></pre><h3 id=\"cartesian4\"><a class=\"header-anchor\" href=\"#cartesian4\">¶</a> Cartesian4</h3><p>表达 <code>Cesium.Cartesian4</code> 有 2 种方式:</p><ul><li><code>Cartesian4Option</code></li></ul><pre><code class=\"hljs language-js\">interface Cartesian4Option {\n  x?: number\n  y?: number\n  z?: number\n  w?: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[(x: number), (y: number), (z: number), (w: number)]\n</code></pre><h3 id=\"rectange-coordinates\"><a class=\"header-anchor\" href=\"#rectange-coordinates\">¶</a> Rectange(coordinates)</h3><p>表达 <code>Cesium.Rectange</code> 有 3 种方式:</p><ul><li><code>RectangleInDegreeOption</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\ninterface RectangleInDegreeOption {\n  <span class=\"hljs-attr\">west</span>: number\n  <span class=\"hljs-attr\">south</span>: number\n  <span class=\"hljs-attr\">east</span>: number\n  <span class=\"hljs-attr\">north</span>: number\n}\n</code></pre><ul><li><code>Cartesian4Option</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位弧度</span>\ninterface Cartesian4Option {\n  x?: number\n  y?: number\n  z?: number\n  w?: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 单位度</span>\n;[(west: number), (south: number), (east: number), (north: number)]\n</code></pre><h3 id=\"camera\"><a class=\"header-anchor\" href=\"#camera\">¶</a> Camera</h3><p>表达 <code>Cesium.Camera</code> 有 1 种方式:</p><ul><li><code>CameraOption</code></li></ul><pre><code class=\"hljs language-js\">interface CameraOption {\n  position?: Cartesian3Option | CartographicInDegreeOption | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;\n  retangle?: RectangleInDegreeOption | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;\n  heading?: number\n  pitch?: number\n  roll?: number\n}\n</code></pre><h3 id=\"polygonhierarchy\"><a class=\"header-anchor\" href=\"#polygonhierarchy\">¶</a> PolygonHierarchy</h3><p>表达 <code>Cesium.PolygonHierarchy</code> 的方式有 2 种:</p><ul><li><code>PolygonHierarchyOption</code></li></ul><pre><code class=\"hljs language-js\">interface PolygonHierarchyOption {\n  <span class=\"hljs-attr\">positions</span>: <span class=\"hljs-built_in\">Array</span>&lt;Cesium.Cartesian3&gt; | <span class=\"hljs-built_in\">Array</span>&lt;Cartesian3Option&gt; | <span class=\"hljs-built_in\">Array</span>&lt;<span class=\"hljs-built_in\">Array</span>&lt;number&gt;&gt;\n  holes?: <span class=\"hljs-built_in\">Array</span>&lt;PolygonHierarchyOption&gt;\n}\n</code></pre><ul><li><code>Array&lt;Cartesian3Option&gt;</code></li></ul><pre><code class=\"hljs language-js\">[{<span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number},...,{<span class=\"hljs-attr\">lng</span>: number, <span class=\"hljs-attr\">lat</span>: number, <span class=\"hljs-attr\">height</span>: number}]\n</code></pre><h3 id=\"nearfarscalar\"><a class=\"header-anchor\" href=\"#nearfarscalar\">¶</a> NearFarScalar</h3><p>表达 <code>Cesium.NearFarScalar</code> 的方式有 2 种：</p><ul><li><code>NearFarScalarOption</code></li></ul><pre><code class=\"hljs language-js\">interface NearFarScalarOption {\n  <span class=\"hljs-attr\">near</span>: number\n  <span class=\"hljs-attr\">nearValue</span>: number\n  <span class=\"hljs-attr\">far</span>: number\n  <span class=\"hljs-attr\">farValue</span>: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">[near: number, <span class=\"hljs-attr\">nearValue</span>: number, <span class=\"hljs-attr\">far</span>: number, <span class=\"hljs-attr\">farValue</span>: number, ..., <span class=\"hljs-attr\">near</span>: number, <span class=\"hljs-attr\">nearValue</span>: number, <span class=\"hljs-attr\">far</span>: number, <span class=\"hljs-attr\">farValue</span>: number]\n</code></pre><h3 id=\"distancedisplaycondition\"><a class=\"header-anchor\" href=\"#distancedisplaycondition\">¶</a> DistanceDisplayCondition</h3><p>表达 <code>Cesium.DistanceDisplayCondition</code> 的方式有 2 种：</p><ul><li><code>DistanceDisplayConditionOption</code></li></ul><pre><code class=\"hljs language-js\">interface DistanceDisplayConditionOption {\n  <span class=\"hljs-attr\">near</span>: number\n  <span class=\"hljs-attr\">far</span>: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">[near: number, <span class=\"hljs-attr\">far</span>: number, ..., <span class=\"hljs-attr\">near</span>: number, <span class=\"hljs-attr\">far</span>: number]\n</code></pre><h3 id=\"color\"><a class=\"header-anchor\" href=\"#color\">¶</a> Color</h3><p>表达 <code>Cesium.Color</code> 的方式有 4 种：</p><ul><li><code>string</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// css color</span>\n<span class=\"hljs-string\">&#39;white&#39;</span>\n<span class=\"hljs-string\">&#39;#fff&#39;</span>\n<span class=\"hljs-string\">&#39;rgba(255,255,255,0)&#39;</span>\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// in byte</span>\n;[(r: number), (g: number), (b: number), (a: number)]\n</code></pre><ul><li><code>ColorInByteOption</code></li></ul><pre><code class=\"hljs language-js\">interface ColorInByteOption {\n  <span class=\"hljs-attr\">red</span>: number\n  <span class=\"hljs-attr\">green</span>: number\n  <span class=\"hljs-attr\">blue</span>: number\n  alpha?: number\n}\n</code></pre><ul><li><code>Cartesian4Option</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 范围从0（无强度）到1.0（全强度）。</span>\ninterface Cartesian4Option {\n  x?: number\n  y?: number\n  z?: number\n  w?: number\n}\n</code></pre><h3 id=\"material\"><a class=\"header-anchor\" href=\"#material\">¶</a> Material</h3><p>表达 <code>Cesium.Material</code>, <code>Cesium.MaterialProperty</code> 的方式有 3 种：</p><ul><li><code>string</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 颜色或者图片url</span>\n<span class=\"hljs-string\">&#39;red&#39;</span>\n<span class=\"hljs-string\">&#39;https://zouyaoji.top/vue-cesium/favicon.png&#39;</span>\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 颜色</span>\n;[<span class=\"hljs-number\">255</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">255</span>]\n</code></pre><ul><li><code>MaterialOption</code></li></ul><pre><code class=\"hljs language-js\">interface MaterialOption {\n    <span class=\"hljs-attr\">fabric</span>: {\n    <span class=\"hljs-attr\">type</span>: string\n    <span class=\"hljs-attr\">uniforms</span>: {\n      color?: Cesium.Color | string | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | ColorInByteOption | Cartesian4Option\n      image?: string | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n      repeat?: Cesium.Cartesian2 | Cartesian2Option | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | number\n      transparent?: boolean\n      evenColor?: Cesium.Color | string | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | ColorInByteOption | Cartesian4Option\n      oddColor?: Cesium.Color | string | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | ColorInByteOption | Cartesian4Option\n      gapColor?: Cesium.Color | string | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | ColorInByteOption | Cartesian4Option\n      dashLength?: number\n      dashPattern?: number\n      glowPower?: number\n      taperPower?: number\n      outlineColor?: Cesium.Color | string | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | ColorInByteOption | Cartesian4Option\n      outlineWidth?: number\n      cellAlpha?: number\n      lineCount?: Cesium.Cartesian2 | Cartesian2Option | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | number\n      lineThickness?: Cesium.Cartesian2 | Cartesian2Option | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | number\n      lineOffset?: Cesium.Cartesian2 | Cartesian2Option | <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | number\n      orientation?: number | Cesium.StripeOrientation\n      offset?: number\n    }\n  }\n  strict?: boolean\n  translucent?: boolean | AnyFunction\n  minificationFilter?: Cesium.TextureMinificationFilter\n  magnificationFilter?: Cesium.TextureMagnificationFilter\n}\n</code></pre><h3 id=\"boundingrectangle\"><a class=\"header-anchor\" href=\"#boundingrectangle\">¶</a> BoundingRectangle</h3><p>表达 <code>Cesium.BoundingRectangle</code> 的方式有 2 种：</p><ul><li><code>BoundingRectangleOption</code></li></ul><pre><code class=\"hljs language-js\">interface BoundingRectangleOption {\n  <span class=\"hljs-attr\">x</span>: number\n  <span class=\"hljs-attr\">y</span>: number\n  <span class=\"hljs-attr\">width</span>: number\n  <span class=\"hljs-attr\">height</span>: number\n}\n</code></pre><ul><li><code>Array&lt;number&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[(x: number), (y: number), (width: number), (height: number)]\n</code></pre><h3 id=\"plane\"><a class=\"header-anchor\" href=\"#plane\">¶</a> Plane</h3><p>表达 <code>Cesium.Plane</code> 的方式有 2 种：</p><ul><li><code>PlaneOption</code></li></ul><pre><code class=\"hljs language-js\">interface PlaneOption {\n  <span class=\"hljs-attr\">normal</span>: Cesium.Cartesian3 | Cartesian3Option | CartographicInDegreeOption | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;\n  distance: number\n}\n</code></pre><ul><li><code>Array&lt;any&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[(plane: <span class=\"hljs-built_in\">Array</span>&lt;number&gt; | <span class=\"hljs-built_in\">Array</span>&lt;Cartesian3Option&gt;), (distance: number)]\n</code></pre><h3 id=\"translationrotationscale\"><a class=\"header-anchor\" href=\"#translationrotationscale\">¶</a> TranslationRotationScale</h3><p>表达 <code>Cesium.TranslationRotationScale</code> 的方式有 2 种：</p><ul><li><code>TranslationRotationScaleOption</code></li></ul><pre><code class=\"hljs language-js\">interface TranslationRotationScaleOption {\n  <span class=\"hljs-attr\">translation</span>: Cesium.Cartesian3 | Cartesian3Option | CartographicInDegreeOption | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;\n  rotation: Cesium.Quaternion | Cartesian4Option | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;\n  scale: Cesium.Cartesian3 | Cartesian3Option | CartographicInDegreeOption | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;\n}\n</code></pre><ul><li><code>Array&lt;any&gt;</code></li></ul><pre><code class=\"hljs language-js\">;[\n  (translation: Cesium.Cartesian3 | Cartesian3Option | CartographicInDegreeOption | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;),\n  (rotation: Cesium.Quaternion | Cartesian4Option | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;),\n  (scale: Cesium.Cartesian3 | Cartesian3Option | CartographicInDegreeOption | <span class=\"hljs-built_in\">Array</span>&lt;number&gt;)\n]\n</code></pre><h2 id=\"chang-liang\"><a class=\"header-anchor\" href=\"#chang-liang\">¶</a> 常量</h2><h3 id=\"horizontalorigin\"><a class=\"header-anchor\" href=\"#horizontalorigin\">¶</a> HorizontalOrigin</h3><p>用于描述文本、布告板等对象水平对齐方式。</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>CENTER</td><td>0</td><td>居中对齐</td></tr><tr><td>LEFT</td><td>1</td><td>左对齐</td></tr><tr><td>RIGHT</td><td>-1</td><td>右对齐</td></tr></tbody></table><h3 id=\"verticalorigin\"><a class=\"header-anchor\" href=\"#verticalorigin\">¶</a> VerticalOrigin</h3><p>用于描述文本、布告板等对象垂直对齐方式。</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>CENTER</td><td>0</td><td>居中对齐</td></tr><tr><td>BOTTOM</td><td>1</td><td>底部对齐</td></tr><tr><td>BASELINE</td><td>2</td><td>基线对齐</td></tr><tr><td>TOP</td><td>-1</td><td>顶部对齐</td></tr></tbody></table><h3 id=\"heightreference\"><a class=\"header-anchor\" href=\"#heightreference\">¶</a> HeightReference</h3><p>用于描述文本、布告板等对象高度模式。</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>NONE</td><td>0</td><td>无</td></tr><tr><td>CLAMP_TO_GROUND</td><td>1</td><td>贴地</td></tr><tr><td>RELATIVE_TO_GROUND</td><td>2</td><td>相对于地面</td></tr></tbody></table><h3 id=\"shadowmode\"><a class=\"header-anchor\" href=\"#shadowmode\">¶</a> ShadowMode</h3><p>用于描述阴影接收方式。</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>DISABLED</td><td>0</td><td>不生效</td></tr><tr><td>ENABLED</td><td>1</td><td>生效</td></tr><tr><td>CAST_ONLY</td><td>2</td><td>仅发射</td></tr><tr><td>RECEIVE_ONLY</td><td>3</td><td>仅接收</td></tr></tbody></table><h3 id=\"cornertype\"><a class=\"header-anchor\" href=\"#cornertype\">¶</a> CornerType</h3><p>用于描述 corridor 转角样式</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>ROUNDED</td><td>0</td><td>圆角</td></tr><tr><td>MITERED</td><td>1</td><td>直角</td></tr><tr><td>BEVELED</td><td>2</td><td>斜角</td></tr></tbody></table><h3 id=\"classificationtype\"><a class=\"header-anchor\" href=\"#classificationtype\">¶</a> ClassificationType</h3><p>描述贴对象方式</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>TERRAIN</td><td>0</td><td>只贴地</td></tr><tr><td>CESIUM_3D_TILE</td><td>1</td><td>只贴 3DTile</td></tr><tr><td>BOTH</td><td>2</td><td>都贴</td></tr></tbody></table><h3 id=\"bingmapsstyle\"><a class=\"header-anchor\" href=\"#bingmapsstyle\">¶</a> BingMapsStyle</h3><p>描述 BingMaps 风格</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>AERIAL</td><td>&#39;Aerial&#39;</td><td>卫星影像</td></tr><tr><td>AERIAL_WITH_LABELS</td><td>&#39;AerialWithLabels&#39;</td><td>卫星影像带标注</td></tr><tr><td>AERIAL_WITH_LABELS_ON_DEMAND</td><td>&#39;AerialWithLabelsOnDemand&#39;</td><td>卫星影像带主要的标注</td></tr><tr><td>ROAD</td><td>&#39;Road&#39;</td><td>道路</td></tr><tr><td>ROAD_ON_DEMAND</td><td>&#39;RoadOnDemand&#39;</td><td>主要道路</td></tr><tr><td>CANVAS_DARK</td><td>&#39;CanvasDark&#39;</td><td>暗色</td></tr><tr><td>CANVAS_LIGHT</td><td>&#39;CanvasGray&#39;</td><td>亮色</td></tr><tr><td>CANVAS_GRAY</td><td>&#39;CanvasLight&#39;</td><td>灰色</td></tr><tr><td>ORDNANCE_SURVEY</td><td>&#39;OrdnanceSurvey&#39;</td><td>---</td></tr><tr><td>COLLINS_BART</td><td>&#39;CollinsBart&#39;</td><td>---</td></tr></tbody></table><h3 id=\"labelstyle\"><a class=\"header-anchor\" href=\"#labelstyle\">¶</a> LabelStyle</h3><p>描述文本风格</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>FILL</td><td>0</td><td>填充</td></tr><tr><td>OUTLINE</td><td>1</td><td>轮廓</td></tr><tr><td>FILL_AND_OUTLINE</td><td>2</td><td>填充和轮廓</td></tr></tbody></table><h3 id=\"arctype\"><a class=\"header-anchor\" href=\"#arctype\">¶</a> ArcType</h3><p>描述线段样式</p><table><thead><tr><th>常量</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>NONE</td><td>0</td><td>直线</td></tr><tr><td>GEODESIC</td><td>1</td><td>测地线</td></tr><tr><td>RHUMB</td><td>2</td><td>按照恒向线或等倾角螺旋</td></tr></tbody></table><h2 id=\"can-kao\"><a class=\"header-anchor\" href=\"#can-kao\">¶</a> 参考</h2><blockquote><p><a href=\"https://cesium.com/docs/cesiumjs-ref-doc/index.html\">Cesium 官方文档</a></p></blockquote>", 139);

function render(_ctx, _cache) {
  var _component_right_nav = Object(vue_esm_browser["O" /* resolveComponent */])("right-nav");

  return Object(vue_esm_browser["F" /* openBlock */])(), Object(vue_esm_browser["i" /* createBlock */])("section", _hoisted_1, [_hoisted_2, Object(vue_esm_browser["n" /* createVNode */])(_component_right_nav)]);
}
// CONCATENATED MODULE: ./website/docs/en-US/base.md?vue&type=template&id=23507df9

// CONCATENATED MODULE: ./website/docs/en-US/base.md

const script = {}
script.render = render

/* harmony default export */ var base = __webpack_exports__["default"] = (script);

/***/ })

}]);