(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[85],{

/***/ 657:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm-browser.js
var vue_esm_browser = __webpack_require__(0);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/en-US/quickstart.md?vue&type=template&id=3e82c284

var _hoisted_1 = {
  class: "content element-doc"
};

var _hoisted_2 = /*#__PURE__*/Object(vue_esm_browser["l" /* createStaticVNode */])("<h2 id=\"quick-start\"><a class=\"header-anchor\" href=\"#quick-start\">¶</a> Quick start</h2><p>This part walks you through the process of using VueCesium in a webpack project.</p><h3 id=\"use-starter-kit\"><a class=\"header-anchor\" href=\"#use-starter-kit\">¶</a> Use Starter Kit</h3><p>We provide a general <a href=\"https://github.com/zouyaoji/vue-cesium-starter\">project template</a> for you, and also a <a href=\"https://github.com/zouyaoji/vue-cesium-vite-starter\">Vite template</a>, and a <a href=\"https://github.com/zouyaoji/vue-cesium-electron-vite-starter\">Vite electron template</a>.</p><p>If you prefer not to use them, please read the following.</p><h3 id=\"import-vuecesium\"><a class=\"header-anchor\" href=\"#import-vuecesium\">¶</a> Import VueCesium</h3><p>You can import VueCesium entirely, or just import what you need. Let&#39;s start with fully import.</p><h4 id=\"fully-import\"><a class=\"header-anchor\" href=\"#fully-import\">¶</a> Fully import</h4><p>In main.js:</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> VueCesium <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#39;vue-cesium/lib/theme-default/index.css&#39;</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\napp.use(VueCesium)\napp.mount(<span class=\"hljs-string\">&#39;#app&#39;</span>)\n</code></pre><p>The above imports VueCesium entirely. Note that CSS file needs to be imported separately.</p><h4 id=\"on-demand\"><a class=\"header-anchor\" href=\"#on-demand\">¶</a> On demand</h4><p>With the help of <a href=\"https://github.com/ant-design/babel-plugin-import\">babel-plugin-import</a>, we can import components we actually need, making the project smaller than otherwise.</p><p>Firstly，install babel-plugin-import:</p><pre><code class=\"hljs language-bash\">$ npm install babel-plugin-import -D\n</code></pre><p>or if you use Yarn as package manager</p><pre><code class=\"hljs language-bash\">$ yarn add babel-plugin-import -D\n</code></pre><p>Then edit babel.config.js:</p><pre><code class=\"hljs language-js\"><span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">plugins</span>: [\n    [\n      <span class=\"hljs-string\">&#39;import&#39;</span>,\n      {\n        <span class=\"hljs-attr\">libraryName</span>: <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n      }\n    ]\n  ]\n}\n</code></pre><p>Next, if you need Viewer, edit main.js:</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> { VcViewer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\napp.component(VcViewer.name, VcViewer)\n\n<span class=\"hljs-comment\">/* or\n * app.use(VcViewer)\n */</span>\n\napp.mount(<span class=\"hljs-string\">&#39;#app&#39;</span>)\n</code></pre><p>Full example (Component list <a href=\"https://github.com/zouyaoji/vue-cesium/tree/dev/packages\">reference</a>)</p><pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> { VcViewer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> components = [VcViewer]\n\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\n\ncomponents.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">component</span>) =&gt;</span> {\n  app.component(component.name, component)\n})\n</code></pre><h3 id=\"global-config\"><a class=\"header-anchor\" href=\"#global-config\">¶</a> Global config</h3><p>When importing VueCesium, you can define a global config object. For now this object has two properties: <code>cesiumPath</code> and <code>accessToken</code>. <code>cesiumPath</code> is used to specify the <code>CesiumJS</code> library loaded by VueCesium, support loading the official version of Cesium or a third-party version developed based on Cesium, <strong>Note:</strong> Please use the files in the Build directory. And <code>accessToken</code> is used to set <code>Cesium.Ion.defaultAccessToken</code>. According to the method of introducing VueCesium, the specific operations are as follows:</p><p>Fully import VueCesium:</p><pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> VueCesium <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>;\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\napp.use(VueCesium, {\n  <span class=\"hljs-comment\">// cesiumPath is the path of Cesium.js, such as</span>\n  <span class=\"hljs-comment\">// cesiumPath: /static/Cesium/Cesium.js</span>\n  <span class=\"hljs-comment\">// cesiumPath: &#39;https://unpkg.com/cesium/Build/Cesium/Cesium.js&#39;</span>\n  <span class=\"hljs-attr\">cesiumPath</span>: <span class=\"hljs-string\">&#39;Your CesiumJS Path&#39;</span>,\n  <span class=\"hljs-comment\">// To use the data source of Cesium ion, you need to apply for an account at https://cesium.com/ion/ to obtain Access Token.</span>\n  <span class=\"hljs-comment\">// If not specified, it may cause CesiumIon&#39;s online image and terrain loading failure</span>\n  <span class=\"hljs-attr\">accessToken</span>: <span class=\"hljs-string\">&#39;Your Cesium Ion defaultAccessToken&#39;</span>\n})\n\n</code></pre><p>Partial import VueCesium</p><pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue&#39;</span>\n<span class=\"hljs-keyword\">import</span> { VcViewer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;vue-cesium&#39;</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#39;./App.vue&#39;</span>\n\n<span class=\"hljs-keyword\">const</span> option = {\n  <span class=\"hljs-comment\">// cesiumPath is the path of Cesium.js, such as</span>\n  <span class=\"hljs-comment\">// cesiumPath: /static/Cesium/Cesium.js</span>\n  <span class=\"hljs-comment\">// cesiumPath: &#39;https://unpkg.com/cesium/Build/Cesium/Cesium.js&#39;</span>\n  <span class=\"hljs-attr\">cesiumPath</span>: <span class=\"hljs-string\">&#39;Your CesiumJS Path&#39;</span>,\n  <span class=\"hljs-comment\">// To use the data source of Cesium ion, you need to apply for an account at https://cesium.com/ion/ to obtain Access Token.</span>\n  <span class=\"hljs-comment\">// If not specified, it may cause CesiumIon&#39;s online image and terrain loading failure</span>\n  <span class=\"hljs-attr\">accessToken</span>: <span class=\"hljs-string\">&#39;Your Cesium Ion defaultAccessToken&#39;</span>\n}\n<span class=\"hljs-keyword\">const</span> app = createApp(App)\napp.config.globalProperties.$VueCesium = option\napp.use(VcViewer)\n</code></pre><h3 id=\"start-coding\"><a class=\"header-anchor\" href=\"#start-coding\">¶</a> Start coding</h3><p>Now you have implemented Vue and VueCesium to your project, and it&#39;s time to write your code. Please refer to each component&#39;s documentation to learn how to use them.</p>", 31);

function render(_ctx, _cache) {
  var _component_right_nav = Object(vue_esm_browser["O" /* resolveComponent */])("right-nav");

  return Object(vue_esm_browser["F" /* openBlock */])(), Object(vue_esm_browser["i" /* createBlock */])("section", _hoisted_1, [_hoisted_2, Object(vue_esm_browser["n" /* createVNode */])(_component_right_nav)]);
}
// CONCATENATED MODULE: ./website/docs/en-US/quickstart.md?vue&type=template&id=3e82c284

// CONCATENATED MODULE: ./website/docs/en-US/quickstart.md

const script = {}
script.render = render

/* harmony default export */ var quickstart = __webpack_exports__["default"] = (script);

/***/ })

}]);