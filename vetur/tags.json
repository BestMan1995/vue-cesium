{
  "vc-viewer": {
    "attributes": [
      "animation",
      "baseLayerPicker",
      "timeline",
      "fullscreenButton",
      "fullscreenElement",
      "infoBox",
      "showCredit",
      "vrButton",
      "geocoder",
      "homeButton",
      "sceneModePicker",
      "selectionIndicator",
      "navigationHelpButton",
      "navigationInstructionsInitiallyVisible",
      "scene3DOnly",
      "shouldAnimate",
      "useDefaultRenderLoop",
      "showRenderLoopErrors",
      "useBrowserRecommendedResolution",
      "automaticallyTrackDataSourceClocks",
      "sceneMode",
      "orderIndependentTranslucency",
      "terrainExaggeration",
      "shadows",
      "terrainShadows",
      "mapMode2D",
      "projectionPicker",
      "requestRenderMode",
      "maximumRenderTimeChange",
      "debugShowFramesPerSecond",
      "camera",
      "navigation",
      "TZCode",
      "UTCOffset",
      "removeCesiumScript",
      "autoSortImageryLayers",
      "enableEvent",
      "skeleton",
      "beforeLoad",
      "cesiumReady",
      "ready",
      "destroyed",
      "update:camera",
      "viewerWidgetResized",
      "LEFT_CLICK",
      "LEFT_DOUBLE_CLICK",
      "LEFT_DOWN",
      "LEFT_UP",
      "MIDDLE_CLICK",
      "MIDDLE_DOWN",
      "MIDDLE_UP",
      "MOUSE_MOVE",
      "PINCH_END",
      "PINCH_MOVE",
      "PINCH_START",
      "RIGHT_CLICK",
      "RIGHT_DOWN",
      "RIGHT_UP",
      "WHEEL",
      "leftClick",
      "leftDoubleClick",
      "leftDown",
      "leftUp",
      "middleClick",
      "middleDown",
      "middleUp",
      "mouseMove",
      "pinchEnd",
      "pinchMove",
      "pinchStart",
      "rightClick",
      "rightDown",
      "rightUp",
      "wheel",
      "mousedown",
      "mouseup",
      "click",
      "clickout",
      "dblclick",
      "mousemove",
      "mouseover",
      "mouseout",
      "layerAdded",
      "layerMoved",
      "layerRemoved",
      "layerShownOrHidden",
      "dataSourceAdded",
      "dataSourceMoved",
      "dataSourceRemoved",
      "collectionChanged",
      "morphComplete",
      "morphStart",
      "postRender",
      "postUpdate",
      "preRender",
      "preUpdate",
      "renderError",
      "terrainProviderChanged",
      "changed",
      "moveEnd",
      "moveStart",
      "onStop",
      "onTick",
      "errorEvent",
      "cameraClicked",
      "closeClicked",
      "imageryLayersUpdatedEvent",
      "terrainProviderChanged",
      "tileLoadProgressEvent"
    ],
    "subtags": [
      "vc-compass",
      "vc-compass-sm",
      "vc-zoom-control",
      "vc-zoom-control-sm",
      "vc-print",
      "vc-my-location",
      "vc-location-bar",
      "vc-distance-legend",
      "vc-navigation",
      "vc-navigation-sm",
      "vc-layer-imagery",
      "vc-entity",
      "vc-provider-terrain-cesium",
      "vc-provider-terrain-arcgis-tiled-elevation",
      "vc-provider-terrain-tianditu",
      "vc-datasource-custom",
      "vc-datasource-czml",
      "vc-datasource-geojson",
      "vc-datasource-kml"
    ],
    "description": "A base widget for building applications. It composites all of the standard Cesium widgets into one reusable package. The widget can always be extended by using mixins, which add functionality useful for a variety of applications."
  },
  "vc-navigation": {
    "attributes": [
      "position",
      "offset",
      "compassOpts",
      "zoomOpts",
      "printOpts",
      "locationOpts",
      "otherOpts",
      "beforeLoad",
      "ready",
      "destroyed",
      "zoomEvt",
      "compassEvt",
      "locationEvt",
      "printEvt",
      "locationBarEvt",
      "distanceLegendEvt"
    ],
    "description": "Adds to the viewer a user friendly compass, navigator (zoom in/out), print button, location button, and distance scale graphical user interface."
  },
  "vc-navigation-sm": {
    "attributes": ["position", "offset", "compassOpts", "zoomOpts", "beforeLoad", "ready", "destroyed", "zoomEvt", "compassEvt"],
    "description": "Adds to the viewer a user friendly compass, navigator (zoom in/out)."
  },
  "vc-compass": {
    "attributes": [
      "enableCompassOuterRing",
      "duration",
      "position",
      "offset",
      "outerOptions",
      "innerOptions",
      "markerOptions",
      "beforeLoad",
      "ready",
      "destroyed",
      "compassEvt"
    ],
    "description": "Adds to the viewer a user friendly compass."
  },
  "vc-compass-sm": {
    "attributes": [
      "enableCompassOuterRing",
      "duration",
      "tooltip",
      "autoHidden",
      "position",
      "offset",
      "beforeLoad",
      "ready",
      "destroyed",
      "compassEvt"
    ],
    "description": "Adds to the viewer a user friendly compass."
  },
  "vc-zoom-control": {
    "attributes": [
      "enableResetButton",
      "zoomAmount",
      "duration",
      "durationReset",
      "defaultResetView",
      "overrideViewerCamera",
      "position",
      "offset",
      "background",
      "border",
      "borderRadius",
      "direction",
      "zoomInOptions",
      "zoomOutOptions",
      "zoomResetOptions",
      "beforeLoad",
      "ready",
      "destroyed",
      "zoomEvt"
    ],
    "description": "Adds to the viewer a navigator (zoom in/out)."
  },
  "vc-zoom-control-sm": {
    "attributes": ["position", "offset", "autoHidden", "tooltip", "beforeLoad", "ready", "destroyed", "zoomEvt"],
    "description": "Adds to the viewer a navigator (zoom in/out)."
  },
  "vc-print": {
    "attributes": [
      "showCredit",
      "printAutomatically",
      "showPrintView",
      "downloadAutomatically",
      "position",
      "offset",
      "name",
      "size",
      "color",
      "background",
      "round",
      "flat",
      "label",
      "stack",
      "tooltip",
      "beforeLoad",
      "ready",
      "destroyed",
      "printEvt"
    ],
    "description": "Adds to the viewer a print/share button."
  },
  "vc-my-location": {
    "attributes": [
      "geolocation",
      "amap",
      "id",
      "pointColor",
      "pixelSize",
      "outlineWidth",
      "outlineColor",
      "level",
      "duration",
      "factor",
      "customAPI",
      "description",
      "position",
      "offset",
      "name",
      "size",
      "color",
      "background",
      "round",
      "flat",
      "label",
      "stack",
      "tooltip",
      "loadingType",
      "beforeLoad",
      "ready",
      "destroyed",
      "locationEvt"
    ],
    "description": "Adds to the viewer a my location button."
  },
  "vc-location-bar": {
    "attributes": [
      "gridFileUrl",
      "position",
      "offset",
      "color",
      "background",
      "showCameraInfo",
      "showMouseInfo",
      "showPerformanceInfo",
      "tooltip",
      "beforeLoad",
      "ready",
      "destroyed",
      "locationBarEvt"
    ],
    "description": "Adds to the viewer a location bar."
  },
  "vc-distance-legend": {
    "attributes": ["position", "offset", "color", "background", "width", "barBackground", "beforeLoad", "ready", "destroyed", "distanceLegendEvt"],
    "description": "Adds to the viewer a distance legend bar."
  },
  "vc-layer-imagery": {
    "attributes": [
      "imageryProvider",
      "rectangle",
      "alpha",
      "nightAlpha",
      "dayAlpha",
      "brightness",
      "contrast",
      "hue",
      "saturation",
      "gamma",
      "splitDirection",
      "minificationFilter",
      "magnificationFilter",
      "show",
      "maximumAnisotropy",
      "minimumTerrainLevel",
      "maximumTerrainLevel",
      "cutoutRectangle",
      "colorToAlpha",
      "colorToAlphaThreshold",
      "sortOrder",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "subtags": [
      "vc-provider-imagery-arcgis-mapserver",
      "vc-provider-imagery-baidumap",
      "vc-provider-imagery-bingmaps",
      "vc-provider-imagery-grid",
      "vc-provider-imagery-ion",
      "vc-provider-imagery-mapbox-style",
      "vc-provider-imagery-osm",
      "vc-provider-imagery-supermap",
      "vc-provider-imagery-tianditu",
      "vc-provider-imagery-tile-coordinates",
      "vc-provider-imagery-tile-mapservice",
      "vc-provider-imagery-tile-single",
      "vc-provider-imagery-tilecache",
      "vc-provider-imagery-urltemplate",
      "vc-provider-imagery-wms",
      "vc-provider-imagery-wmts"
    ],
    "description": "An imagery layer that displays tiled image data from a single imagery provider on a Globe."
  },
  "vc-provider-imagery-arcgis-mapserver": {
    "attributes": [
      "url",
      "token",
      "tileDiscardPolicy",
      "usePreCachedTilesIfAvailable",
      "layers",
      "enablePickFeatures",
      "rectangle",
      "tilingScheme",
      "ellipsoid",
      "credit",
      "tileWidth",
      "tileHeight",
      "maximumLevel",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Provides tiled imagery hosted by an ArcGIS MapServer. By default, the server's pre-cached tiles are used, if available."
  },
  "vc-provider-imagery-baidumap": {
    "attributes": [
      "url",
      "rectangle",
      "ellipsoid",
      "tileDiscardPolicy",
      "credit",
      "minimumLevel",
      "maximumLevel",
      "protocol",
      "projectionTransforms",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Provides tiled imagery hosted by baidu map or other sever which similar to the Baidu map tile slicing scheme."
  },
  "vc-provider-imagery-bingmaps": {
    "attributes": [
      "url",
      "rectangle",
      "ellipsoid",
      "tileDiscardPolicy",
      "credit",
      "minimumLevel",
      "maximumLevel",
      "protocol",
      "projectionTransforms",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Provides tiled imagery using the Bing Maps Imagery REST API."
  },
  "vc-provider-imagery-ion": {
    "attributes": ["assetId", "accessToken", "server", "beforeLoad", "ready", "destroyed"],
    "description": "Provides tiled imagery using the Cesium ion REST API."
  },
  "vc-provider-imagery-mapbox-style": {
    "attributes": [
      "url",
      "username",
      "styleId",
      "accessToken",
      "tilesize",
      "scaleFactor",
      "ellipsoid",
      "minimumLevel",
      "maximumLevel",
      "rectangle",
      "credit",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Provides tiled imagery using the Cesium ion REST API."
  },
  "vc-provider-imagery-osm": {
    "attributes": ["url", "fileExtension", "rectangle", "minimumLevel", "maximumLevel", "ellipsoid", "credit", "beforeLoad", "ready", "destroyed"],
    "description": "An imagery provider that provides tiled imagery hosted by OpenStreetMap or another provider of Slippy tiles."
  },
  "vc-provider-imagery-supermap": {
    "attributes": ["url", "minimumLevel", "maximumLevel", "name", "transparent", "credit", "beforeLoad", "ready", "destroyed"],
    "description": "An imagery provider that provides tiled imagery hosted by Supermap iServer."
  },
  "vc-provider-imagery-tianditu": {
    "attributes": ["minimumLevel", "maximumLevel", "mapStyle", "token", "protocol", "beforeLoad", "ready", "destroyed"],
    "description": "An imagery provider that provides tiled imagery hosted by Tianditu."
  },
  "vc-provider-imagery-tile-mapservice": {
    "attributes": [
      "url",
      "fileExtension",
      "credit",
      "minimumLevel",
      "maximumLevel",
      "rectangle",
      "tilingScheme",
      "ellipsoid",
      "tileWidth",
      "tileHeight",
      "flipXY",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "An imagery provider that provides tiled imagery as generated by MapTiler, GDAL2Tiles, etc."
  },
  "vc-provider-imagery-tile-single": {
    "attributes": ["url", "rectangle", "credit", "ellipsoid", "beforeLoad", "ready", "destroyed"],
    "description": "Provides a single, top-level imagery tile. The single image is assumed to use a GeographicTilingScheme."
  },
  "vc-provider-imagery-tiledcache": {
    "attributes": [
      "url",
      "format",
      "credit",
      "minimumLevel",
      "maximumLevel",
      "rectangle",
      "tilingScheme",
      "ellipsoid",
      "tileWidth",
      "tileHeight",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "An imagery provider that provides tiled imagery hosted by tiledcache api."
  },
  "vc-provider-imagery-urltemplate": {
    "attributes": [
      "url",
      "pickFeaturesUrl",
      "urlSchemeZeroPadding",
      "subdomains",
      "credit",
      "minimumLevel",
      "maximumLevel",
      "rectangle",
      "tilingScheme",
      "ellipsoid",
      "tileWidth",
      "tileHeight",
      "hasAlphaChannel",
      "getFeatureInfoFormats",
      "enablePickFeatures",
      "customTags",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Provides imagery by requesting tiles using a specified URL template."
  },
  "vc-provider-imagery-tile-wms": {
    "attributes": [
      "url",
      "layers",
      "parameters",
      "getFeatureInfoParameters",
      "enablePickFeatures",
      "getFeatureInfoFormats",
      "rectangle",
      "tilingScheme",
      "ellipsoid",
      "tileWidth",
      "tileHeight",
      "minimumLevel",
      "maximumLevel",
      "crs",
      "srs",
      "credit",
      "subdomains",
      "clock",
      "times",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Provides tiled imagery hosted by a Web Map Service (WMS) server."
  },
  "vc-provider-imagery-tile-wmts": {
    "attributes": ["url", "rectangle", "credit", "ellipsoid", "beforeLoad", "ready", "destroyed"],
    "description": "Provides tiled imagery served by WMTS 1.0.0 compliant servers. This provider supports HTTP KVP-encoded and RESTful GetTile requests, but does not yet support the SOAP encoding."
  },
  "vc-entity": {
    "attributes": [
      "position",
      "plane",
      "id",
      "name",
      "availability",
      "show",
      "description",
      "orientation",
      "viewFrom",
      "parent",
      "billboard",
      "corridor",
      "cylinder",
      "ellipse",
      "ellipsoid",
      "box",
      "label",
      "model",
      "tileset",
      "path",
      "point",
      "polygon",
      "polyline",
      "properties",
      "polylineVolume",
      "rectangle",
      "wall",
      "enableEvent",
      "beforeLoad",
      "ready",
      "destroyed",
      "update:billboard",
      "update:box",
      "update:corridor",
      "update:cylinder",
      "update:ellipse",
      "update:ellipsoid",
      "update:ellipse",
      "update:label",
      "update:model",
      "update:path",
      "update:plane",
      "update:point",
      "update:polygon",
      "update:polyline",
      "update:polylineVolume",
      "update:rectangle",
      "update:tileset",
      "update:wall"
    ],
    "subtags": [
      "vc-graphics-billboard",
      "vc-graphics-box",
      "vc-graphics-corridor",
      "vc-graphics-cylinder",
      "vc-graphics-ellipsoid",
      "vc-graphics-label",
      "vc-graphics-model",
      "vc-graphics-path",
      "vc-graphics-plane",
      "vc-graphics-point",
      "vc-graphics-polygon",
      "vc-graphics-polyline",
      "vc-graphics-polyline-volume",
      "vc-graphics-rectange",
      "vc-graphics-tileset",
      "vc-graphics-wall"
    ],
    "description": "The `vc-entity` component is used to load the `Cesium.Entity` instance."
  },
  "vc-graphics-billboard": {
    "attributes": [
      "image",
      "scale",
      "pixelOffset",
      "eyeOffset",
      "horizontalOrigin",
      "verticalOrigin",
      "heightReference",
      "color",
      "rotation",
      "alignedAxis",
      "sizeInMeters",
      "width",
      "height",
      "scaleByDistance",
      "translucencyByDistance",
      "pixelOffsetScaleByDistance",
      "disableDepthTestDistance",
      "show",
      "distanceDisplayCondition",
      "imageSubRegion",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a two dimensional icon located at the position of the containing Entity."
  },
  "vc-graphics-box": {
    "attributes": [
      "show",
      "dimensions",
      "heightReference",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "shadows",
      "distanceDisplayCondition",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a box. The center position and orientation are determined by the containing Entity."
  },
  "vc-graphics-corridor": {
    "attributes": [
      "show",
      "positions",
      "width",
      "height",
      "heightReference",
      "extrudedHeight",
      "extrudedHeightReference",
      "cornerType",
      "granularity",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "shadows",
      "distanceDisplayCondition",
      "classificationType",
      "zIndex",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a corridor, which is a shape defined by a centerline and width that conforms to the curvature of the globe. It can be placed on the surface or at altitude and can optionally be extruded into a volume."
  },
  "vc-graphics-cylinder": {
    "attributes": [
      "show",
      "length",
      "topRadius",
      "bottomRadius",
      "heightReference",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "numberOfVerticalLines",
      "slices",
      "shadows",
      "distanceDisplayCondition",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a cylinder, truncated cone, or cone defined by a length, top radius, and bottom radius. The center position and orientation are determined by the containing Entity."
  },
  "vc-graphics-ellipse": {
    "attributes": [
      "show",
      "semiMajorAxis",
      "semiMinorAxis",
      "height",
      "heightReference",
      "extrudedHeight",
      "extrudedHeightReference",
      "rotation",
      "stRotation",
      "granularity",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "numberOfVerticalLines",
      "shadows",
      "distanceDisplayCondition",
      "classificationType",
      "zIndex",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes an ellipse defined by a center point and semi-major and semi-minor axes. The ellipse conforms to the curvature of the globe and can be placed on the surface or at altitude and can optionally be extruded into a volume. The center point is determined by the containing Entity."
  },
  "vc-graphics-ellipsoid": {
    "attributes": [
      "show",
      "radii",
      "innerRadii",
      "minimumClock",
      "maximumClock",
      "minimumCone",
      "maximumCone",
      "heightReference",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "stackPartitions",
      "slicePartitions",
      "subdivisions",
      "shadows",
      "distanceDisplayCondition",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describe an ellipsoid or sphere. The center position and orientation are determined by the containing Entity."
  },
  "vc-graphics-label": {
    "attributes": [
      "show",
      "text",
      "font",
      "labelStyle",
      "scale",
      "showBackground",
      "backgroundColor",
      "backgroundPadding",
      "pixelOffset",
      "eyeOffset",
      "horizontalOrigin",
      "verticalOrigin",
      "heightReference",
      "fillColor",
      "outlineColor",
      "outlineWidth",
      "translucencyByDistance",
      "pixelOffsetScaleByDistance",
      "scaleByDistance",
      "distanceDisplayCondition",
      "disableDepthTestDistance",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a two dimensional label located at the position of the containing Entity."
  },
  "vc-graphics-model": {
    "attributes": [
      "show",
      "uri",
      "scale",
      "minimumPixelSize",
      "maximumScale",
      "incrementallyLoadTextures",
      "clampAnimations",
      "shadows",
      "heightReference",
      "silhouetteColor",
      "silhouetteSize",
      "color",
      "colorBlendMode",
      "colorBlendAmount",
      "imageBasedLightingFactor",
      "lightColor",
      "distanceDisplayCondition",
      "nodeTransformations",
      "articulations",
      "clippingPlanes",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "A 3D model based on glTF, the runtime asset format for WebGL, OpenGL ES, and OpenGL. The position and orientation of the model is determined by the containing Entity."
  },
  "vc-graphics-path": {
    "attributes": [
      "show",
      "leadTime",
      "trailTime",
      "width",
      "resolution",
      "material",
      "distanceDisplayCondition",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a polyline defined as the path made by an Entity as it moves over time."
  },
  "vc-graphics-plane": {
    "attributes": [
      "show",
      "plane",
      "dimensions",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "shadows",
      "distanceDisplayCondition",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a plane. The center position and orientation are determined by the containing Entity."
  },
  "vc-graphics-point": {
    "attributes": [
      "show",
      "pixelSize",
      "heightReference",
      "color",
      "outlineColor",
      "outlineWidth",
      "scaleByDistance",
      "translucencyByDistance",
      "distanceDisplayCondition",
      "disableDepthTestDistance",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a graphical point located at the position of the containing Entity."
  },
  "vc-graphics-polygon": {
    "attributes": [
      "show",
      "hierarchy",
      "height",
      "heightReference",
      "extrudedHeight",
      "extrudedHeightReference",
      "stRotation",
      "granularity",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "perPositionHeight",
      "closeTop",
      "closeBottom",
      "arcType",
      "shadows",
      "distanceDisplayCondition",
      "classificationType",
      "zIndex",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a polygon defined by an hierarchy of linear rings which make up the outer shape and any nested holes. The polygon conforms to the curvature of the globe and can be placed on the surface or at altitude and can optionally be extruded into a volume."
  },
  "vc-graphics-polyline": {
    "attributes": [
      "show",
      "positions",
      "width",
      "granularity",
      "material",
      "depthFailMaterial",
      "arcType",
      "clampToGround",
      "shadows",
      "distanceDisplayCondition",
      "classificationType",
      "zIndex",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a polyline. The first two positions define a line segment, and each additional position defines a line segment from the previous position. The segments can be linear connected points, great arcs, or clamped to terrain."
  },
  "vc-graphics-polyline-volume": {
    "attributes": [
      "show",
      "positions",
      "shape",
      "cornerType",
      "granularity",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "shadows",
      "distanceDisplayCondition",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a polyline volume defined as a line strip and corresponding two dimensional shape which is extruded along it. The resulting volume conforms to the curvature of the globe."
  },
  "vc-graphics-rectangle": {
    "attributes": [
      "show",
      "positions",
      "shape",
      "cornerType",
      "granularity",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "shadows",
      "distanceDisplayCondition",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a polyline volume defined as a line strip and corresponding two dimensional shape which is extruded along it. The resulting volume conforms to the curvature of the globe."
  },
  "vc-graphics-tileset": {
    "attributes": ["show", "uri", "maximumScreenSpaceError", "beforeLoad", "ready", "destroyed"],
    "description": "A 3D Tiles tileset represented by an Entity. The tileset modelMatrix is determined by the containing Entity position and orientation or is left unset if position is undefined."
  },
  "vc-graphics-wall": {
    "attributes": [
      "show",
      "positions",
      "minimumHeights",
      "maximumHeights",
      "granularity",
      "fill",
      "material",
      "outline",
      "outlineColor",
      "outlineWidth",
      "shadows",
      "distanceDisplayCondition",
      "beforeLoad",
      "ready",
      "destroyed"
    ],
    "description": "Describes a two dimensional wall defined as a line strip and optional maximum and minimum heights. The wall conforms to the curvature of the globe and can be placed along the surface or at altitude."
  },
  "vc-provider-terrain-cesium": {
    "attributes": [
      "url",
      "requestVertexNormals",
      "requestWaterMask",
      "requestMetadata",
      "ellipsoid",
      "credit",
      "beforeLoad",
      "ready",
      "destroyed",
      "readyPromise"
    ],
    "description": "A TerrainProvider that accesses terrain data in a Cesium terrain format."
  },
  "vc-provider-terrain-arcgis-tiled-elevation": {
    "attributes": ["url", "ellipsoid", "token", "beforeLoad", "ready", "destroyed", "readyPromise"],
    "description": "A TerrainProvider that produces terrain geometry by tessellating height maps retrieved from Elevation Tiles of an ArcGIS ImageService."
  },
  "vc-provider-terrain-tianditu": {
    "attributes": ["url", "subdomains", "pluginPath", "dataType", "tileType", "token", "beforeLoad", "ready", "destroyed", "readyPromise"],
    "description": "A TerrainProvider that produces terrain geometry by tessellating height maps retrieved from Elevation Tiles of Tianditu Service."
  },
  "vc-datasource-custom": {
    "attributes": [
      "show",
      "enableEvent",
      "entities",
      "name",
      "beforeLoad",
      "ready",
      "destroyed",
      "definitionChanged",
      "clusterEvent",
      "collectionChanged",
      "changedEvent",
      "errorEvent",
      "loadingEvent"
    ],
    "description": "A DataSource implementation which can be used to manually manage a group of entities."
  },
  "vc-datasource-czml": {
    "attributes": [
      "show",
      "enableEvent",
      "entities",
      "czml",
      "options",
      "beforeLoad",
      "ready",
      "destroyed",
      "definitionChanged",
      "clusterEvent",
      "collectionChanged",
      "changedEvent",
      "errorEvent",
      "loadingEvent"
    ],
    "description": "A DataSource which processes CZML."
  },
  "vc-datasource-geojson": {
    "attributes": [
      "show",
      "enableEvent",
      "entities",
      "data",
      "options",
      "beforeLoad",
      "ready",
      "destroyed",
      "definitionChanged",
      "clusterEvent",
      "collectionChanged",
      "changedEvent",
      "errorEvent",
      "loadingEvent"
    ],
    "description": "A DataSource which processes both GeoJSON and TopoJSON data. simplestyle-spec properties will also be used if they are present."
  },
  "vc-datasource-kml": {
    "attributes": [
      "show",
      "enableEvent",
      "entities",
      "data",
      "options",
      "beforeLoad",
      "ready",
      "destroyed",
      "definitionChanged",
      "clusterEvent",
      "collectionChanged",
      "changedEvent",
      "errorEvent",
      "loadingEvent",
      "refreshEvent",
      "unsupportedNodeEvent"
    ],
    "description": "A DataSource which processes Keyhole Markup Language 2.2 (KML)."
  }
}
